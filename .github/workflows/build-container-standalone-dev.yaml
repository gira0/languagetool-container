name: DEV - Build Image using Containerfile
on:
  push:
    branches:
      - 'dev'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  CONTAINER_REPO: ${{ github.repository }}

permissions:
  id-token: write
  contents: read
  packages: write
  attestations: write

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check File Limits
      run: |
        ulimit -n
        ulimit -n 65536

    - name: Get LanguageTool Version
      run: bash ./get_current_lt.sh
      shell: bash
      id: get-version

    - name: Print LT Version
      run: echo "LT Version is ${{ steps.get-version.outputs.LT_VERSION }}"

    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: languagetool
        tags: dev dev-${{ steps.get-version.outputs.LT_VERSION }}
        oci: true
        containerfiles: |
          ./Containerfile

    - name: Run Healthcheck
      run: bash -x ./healthcheck.sh ${{ steps.build-image.outputs.image }}
      shell: bash

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push To GitHub Container Registry
      id: push-to-repo
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.REGISTRY }}/${{ env.CONTAINER_REPO }}

    - name: Generate artifact attestation and push
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.CONTAINER_REPO }}/${{ steps.build-image.outputs.image }}
        subject-digest: ${{ steps.push-to-repo.outputs.digest }}
        push-to-registry: true
